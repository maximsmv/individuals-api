version: '3.8'
services:
  individuals-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: individuals-api
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8081
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:26.2
    container_name: keycloak
    ports:
      - "8081:8081"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_HTTP_PORT=8081
      - KC_HTTPS_PORT=8443
    command: start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/opt/keycloak/bin/kc.sh", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network


  postgres:
    image: postgres:17.5-alpine
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local
  keycloak_data:
    driver: local

networks:
  app-network:
    driver: bridge